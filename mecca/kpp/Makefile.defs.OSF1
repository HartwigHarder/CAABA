# -*- sh -*-
#  KPP - symbolic chemistry Kinetics PreProcessor
#
#  developed at Center for Global and Regional Atmospheric Research,
#               University of Iowa
#
#            by Valeriu Damian & Adrian Sandu 
#
#***********************************************************************************/

#
# In order to compile KPP you have to provide the following information:
#

# 1. The name of the compiler you want to use. Normaly this 
#    is either GNU C compiler (gcc) or the native compiler (cc)
#    You can use the complete pathname if the compiler is not in $PATH 
#    Note that for SUN machines is better to use gcc.
#    For GNU C compiler use:
#      CC=gcc
#    For the native compiler use:
#      CC=cc

CC=cc

# 2. The name of your lexical analizer. KPP requires FLEX to be used.
#    FLEX is a public domain lexical analizer and you can download it 
#    from ftp://ftp.cis.ohio-state.edu/pub/gnu/mirror/flex-2.5.3.tar.gz
#    or any other mirror site. If flex directory is not included in your 
#    path use the complete pathname

FLEX=/soft/flex/v2.5.4/bin/flex

# 3. The complete pathname of the FLEX library (libfl.a).
#    On many systems this is: /usr/local/util/lib/flex

FLEX_LIB_DIR=/soft/flex/v2.5.4/lib/

# 4. Platform independent C compiler flags. By default "-O" is used which 
#    turns on optimisation. If you are experiencing problems you may try 
#    "-g" to include debuging informations.

CC_FLAGS=-O

# 5. The list of models you are interested to build. Available models are:
#      smog:	small example
#      tropo:
#      strato:
#      cbm4:
#      wet:
#    Use the following to build all models:
#      MODELS= smog tropo strato small_strato cbm4 wet 

MODELS= smog tropo strato small_strato cbm4 wet

# 5. The list of integrators you are interested to use for each model. 
#    Available integrators are:
#      qssafix:
#      qssa:
#      exqssa:
#      atmdvode:
#      atmlsodes:
#      atmrodas:
#      atmros4:
#      atmsdirk:
#      atmseulex:
#      radau5:
#      rodas3:
#      ros3:
#    Use the following to use all integrators:  
#      INTEGRATORS= qssafix qssa exqssa atmdvode atmlsodes atmrodas \ 
#                   atmros4 atmsdirk atmseulex radau5 rodas3 ros3 

INTEGRATORS= qssafix qssa exqssa atmdvode atmlsodes atmrodas \
             atmros4 atmsdirk atmseulex radau5 rodas3 ros3


# 6. Name and optional options to use when compiling FORTRAN source.
#    For example:
#      FC=f77 -O

FC=/usr/bin/f77 

# 7. Platform independent Fortran compiler flags. By default "-O" is used which 
#    turns on optimisation. If you are experiencing problems you may try 
#    "-g" to include debuging informations.

FC_FLAGS=-O -w


#----------------------------------------------------------------------------
# From this point on we will try to guess the best options for your machine.
# If something fails please send an email to asandu@mtu.edu. 
#---------------------------------------------------------------------------

SHELL = /bin/sh

#  Mathematical libraries like BLAS and LAPACK are needed by some 
#  integrators. The following variables tell the linker the paths 
#  to the libraries and the library names.
#  For each library you link to the general form is
#     -l<library_name>
#  or
#     -L<library_directory> -l<library_name>
#
#  Note that the order in which you provide the libraries is 
#  sometimes important.
#
#  Example on Linux: 
#    F_MATHLIBS = -L/usr/lib -lblas -L/usr/lib -llapack
#  Example on Alpha: 
#    F_MATHLIBS = -lcxml

# ... LIBS for Fortran code
F_MATHLIBS = 

# ... LIBS for C code
C_MATHLIBS = -lm
